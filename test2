function doGet(e) {
  var name = e.parameter.name;
  var sheet = e.parameter.sheet;
  if (name === "Show Tab Name") {
    var tab = ShowTabName();
    return _json(tab);
  } else if (name === "Show Tab Data") {
    var data = ShowTabData(sheet);
    return _json(data);
  }
}

function doPost(e) {
  var data;
  
  // 嘗試解析 JSON
  try {
    data = JSON.parse(e.postData.contents);
  } catch (error) {
    // 如果解析失敗，使用表單參數
    data = e.parameter;
  }
  
  var name = data.name;
  var sheet = data.sheet;
  var range = data.range;
  var sheetName = data.sheetName;
  var category = data.category;
  var item = data.item;
  var cost = data.cost;
  var note = data.note;
  var deleteCategory = data.deleteCategory;
  var deleteItem = data.deleteItem;
  var deleteCost = data.deleteCost;
  var deleteNote = data.deleteNote;
  var addCategory = data.addCategory;
  var addItem = data.addItem;
  var addCost = data.addCost;
  var addNote = data.addNote;
  
  var result = { success: false, message: "" };
  
  try {
    if (name === "Add Data") {
      result = AddData(sheet,range,category,item,cost,note);
    } else if (name === "Create Tab") {
      result = CreateNewTab();
    } else if (name === "Update Data") {
      result = UpdateData(sheet,range,deleteCategory,deleteItem,deleteCost,deleteNote,addCategory,addItem,addCost,addNote);
    } else if (name === "Delete Data") {
      result = DeleteData(sheet,range,category,item,cost,note);
    } else if (name === "Delete Tab") {
      result = DeleteTab(sheet);
    } else if (name === "Change Tab Name") {
      result = ChangeTabName(sheet,sheetName);
    } else {
      result.message = "未知的操作類型: " + name;
    }
  } catch (error) {
    result.success = false;
    result.message = "操作失敗: " + error.toString();
  }
  
  return _json(result);
}

function _json(obj) {
  return ContentService
    .createTextOutput(JSON.stringify(obj))
    .setMimeType(ContentService.MimeType.JSON);
}

function ShowTabName() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var allSheets = ss.getSheets();
  var sheetNames = [];
  allSheets.slice(2).forEach(function(sheet){
    sheetNames.push(sheet.getSheetName());
  });

  console.log(sheetNames);
  return sheetNames;
}

function ShowTabData(sheet) {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var targetSheet = ss.getSheets()[sheet];

  var ranges = targetSheet.getNamedRanges();
  var res = {};

  ranges.forEach(function(range){
    title = range.getName();
    res[title] = cleanValues(range.getRange().getValues());
  });

  console.log(res);

  function isEmpty(v) {
    return v === "" || v === undefined || v === null;
  }

  function cleanValues(values) {
    var res = [];
    values.forEach(function(value){
      if(!value.every(isEmpty)) {
        res.push(value);
      }
    });

    return res;
  }

  return res;
}

function CreateNewTab() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var allSheets = ss.getSheets();
  var targetSheet = ss.getSheets()[0];

  var now = new Date();
  var year = now.getFullYear();
  var month = now.getMonth()+1;

  var sheetNames = [];
  allSheets.forEach(function(sheet){
    sheetNames.push(sheet.getSheetName());
  });


  if (month < 10) {
    month = '0' + month;
  }
  if (sheetNames.includes(year + month) && parseInt(month)+1 <= 12) {
    month = parseInt(month) + 1;
  } else if (sheetNames.includes(year + month) && parseInt(month)+1 > 12){
    year = parseInt(year) + 1;
    month = 1;
  }
  if (parseInt(month) < 10) {
    month = '0' + parseInt(month);
  }
  if (sheetNames.includes(year + month.toString())) {
    console.log('隔月試算表已新增，請勿繼續新增');
    return { success: false, message: '隔月試算表已新增，請勿繼續新增' };
  } else {
    var destination = SpreadsheetApp.openById('1G-c8fzN38vH02Eu8izCc9TpGAiPQBMYH-z3tUB_4tVM');
    targetSheet.copyTo(destination);
    var copyName = ss.getSheetByName('「空白表」的副本');
    copyName.setName(year + month.toString());
  }
  month = month.toString();
  var targetSheet = ss.getSheetByName(year+month);
  var range = targetSheet.getRange('A2:C');
  var name = '當月收入' + year + month;
  ss.setNamedRange(name,range);
  var range = targetSheet.getRange('E2:H');
  var name = '當月支出預算' + year + month;
  ss.setNamedRange(name,range);
  var range = targetSheet.getRange('J2:L');
  var name = '隔月預計支出' + year + month;
  ss.setNamedRange(name,range);
  
  return { success: true, message: '新分頁已成功建立: ' + year + month };
}

function AddData(sheet,range,category,item,cost,note) {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var targetSheet = ss.getSheets()[sheet];
  var rangeList = targetSheet.getNamedRanges();
  var targetRange = rangeList[range].getRange();
  var row = 1;
  while (targetRange.getCell(row,1).getValue() !== ''){
    row = row + 1;
  }
  if (range === 1) {
    var column = 4;
    var values = [category,item,cost,note];
    var totalColumn = 3;
  } else {
    var column = 3;
    var values = [item,cost,note];
    var totalColumn = 2;
  }
  var firstCell = targetRange.getCell(2,totalColumn).getA1Notation();
  var lastCell = targetRange.getCell(row-1,totalColumn).getA1Notation();
  var totalRange = firstCell + ':' + lastCell;
  targetRange.getCell(row-1,1).offset(0,0,1,column).setValues([values]);
  targetRange.getCell(row,1).setValue('總計');
  targetRange.getCell(row,totalColumn).setFormula('=sum('+ totalRange +')');
  
  return { success: true, message: '資料已成功新增' };
}

function DeleteTab(sheet) {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var targetSheet = ss.getSheets()[sheet];
  var sheetName = targetSheet.getSheetName();
  ss.deleteSheet(targetSheet);
  
  return { success: true, message: '分頁已成功刪除: ' + sheetName };
}

function DeleteData(sheet,range,category,item,cost,note) {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var targetSheet = ss.getSheets()[sheet];
  var rangeList = targetSheet.getNamedRanges();
  var targetRange = rangeList[range].getRange();
  var row = 1;
  if (range === 1) {
    var column = 4;
    var data = [ [category,item,cost,note] ];
    var totalColumn = 3;
  } else {
    var column = 3;
    var data = [ [item,cost,note] ];
    var totalColumn = 2;
  }
  while (!arraryMatch(targetRange.getCell(row,1).offset(0,0,1,column).getValues(), data)) {
    row = row + 1;
  }
  targetRange.getCell(row,1).offset(0,0,1,column).deleteCells(SpreadsheetApp.Dimension.ROWS);
  while (targetRange.getCell(row,1).getValue() !== ''){
    row = row + 1;
  }
  targetRange.getCell(row-1,1).offset(0,0,1,column).deleteCells(SpreadsheetApp.Dimension.ROWS);
  var firstCell = targetRange.getCell(2,totalColumn).getA1Notation();
  var lastCell = targetRange.getCell(row-2,totalColumn).getA1Notation();
  var totalRange = firstCell + ':' + lastCell;
  targetRange.getCell(row-1,1).setValue('總計');
  targetRange.getCell(row-1,totalColumn).setFormula('=sum('+ totalRange +')');
  
  return { success: true, message: '資料已成功刪除' };
}

function ChangeTabName(sheet,name) {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var targetSheet = ss.getSheets()[sheet];
  var oldName = targetSheet.getSheetName();
  targetSheet.setName(name);
  
  return { success: true, message: '分頁名稱已從 "' + oldName + '" 更改為 "' + name + '"' };
}

function UpdateData(sheet,range,deleteCategory,deleteItem,deleteCost,deleteNote,addCategory,addItem,addCost,addNote) {
  var deleteResult = DeleteData(sheet,range,deleteCategory,deleteItem,deleteCost,deleteNote);
  var addResult = AddData(sheet,range,addCategory,addItem,addCost,addNote);
  
  if (deleteResult.success && addResult.success) {
    return { success: true, message: '資料已成功更新' };
  } else {
    return { success: false, message: '更新失敗: ' + (deleteResult.message || '') + ' ' + (addResult.message || '') };
  }
}

function arraryMatch(a1, a2) {
  if (!Array.isArray(a1) || !Array.isArray(a2)) return false;
  if (a1.length !== a2.length) return false;

  for (let i = 0; i < a1.length; i++) {
    const val1 = a1[i];
    const val2 = a2[i];

    const bothArrays = Array.isArray(val1) && Array.isArray(val2);

    if (bothArrays) {
      if (!arraryMatch(val1, val2)) return false; // Recursive call
    } else if (val1 !== val2) {
      return false;
    }
  }

  return true;
}